.container.projects
  %h2 Project Highlights

  %h3 "Diamonds"
  %p
    I had some down time after my bike trip while looking for work, so I decided to clone an old game that I loved as a kid,
    %a{:href => "https://en.wikipedia.org/wiki/Diamonds_%28video_game%29"} Diamonds
    (by Varcon Systems, Inc.) using JavaScript as a way to learn more about the language.

  %p
    I chose one of the more minimal game libraries,
    %a{:href => "https://github.com/craftyjs/Crafty"} Crafty JS,
    to build this as I didn't want to "cheat" that much. I'd currently say that it is 90% done, though I know the last 10% would take longer than the rest to finish. I implemented most of the basic functionality and copied over many levels (using a level editor that I built), but really wanted to be able to play this on mobile. It sort of works on phones/tablets, depending on the platform, but I haven't figured out the right balance of slowing the game down, leaving room for thumbs, perfecting touch controls, etc to have it both fun and not completely impossible.

  %p
    %a{:href => "https://github.com/twymer/diamonds-js"} The code and instructions
  %p
    %a{:href => "http://www.tylerwymer.com/diamonds/index.html"} Play it here

  .row.grid
    %a{:href => "images/works/diamonds/simpleton.png"}
      %img.span3{:src => "images/works/diamonds/simpleton.png"}
    %a{:href => "images/works/diamonds/brackets.png"}
      %img.span3{:src => "images/works/diamonds/brackets.png"}
    %a{:href => "images/works/diamonds/locksmith.png"}
      %img.span3{:src => "images/works/diamonds/locksmith.png"}
    %a{:href => "images/works/diamonds/level_editor.png"}
      %img.span3{:src => "images/works/diamonds/level_editor.png"}

  %h3 "Lost Marbles" &mdash; Advanced Game Development Capstone
  %p
    My senior project was a game developed in a group of five. Our game was a platformer/puzzler where the player takes the role of an adventurous marble attempting to find someones "lost marbles."
  %p
    Of all projects that I have been involved with, this is certainly the one I am most proud of. We were under tight deadlines with complete creative control and a team of only coders but wound up succeeding at creating a game that was fun to play.

  %p
    %a{:href => "http://www.lupusoru.com/lostmarbles.html"} Game website
  %p
    %a{:href => "http://www.youtube.com/playlist?list=PL58574C7483DD2E5F&feature=view_all"} Gameplay videos
  %p
    %a{:href => "http://github.com/razvanlupusoru/Lost-Marbles"} View the code
  %p
    %a{:href => "http://www.cse.ohio-state.edu/~crawfis/cse786/Installers/2010/LostMarblesFinalSetup.exe"} Game installer
  %p
    /%a{:href => "http://oncampus.osu.edu/2010/06/ninjasmarbles-and-toast/"} Campus paper about the class
    %a{:href => "images/works/786/oncampus.png"} Campus paper about the class
    Link is to an image from the wayback machine as the original article is no longer online.
  .row.grid
    %a{:href => "images/works/786/ss4_1.jpg"}
      %img.span4{:src => "images/works/786/ss4_1.jpg"}
    %a{:href => "images/works/786/ss4_9.jpg"}
      %img.span4{:src => "images/works/786/ss4_9.jpg"}
    %a{:href => "images/works/786/ss5_1.jpg"}
      %img.span4{:src => "images/works/786/ss5_1.jpg"}
  .row.grid
    %a{:href => "images/works/786/ss4_6.jpg"}
      %img.span4{:src => "images/works/786/ss4_6.jpg"}
    %a{:href => "images/works/786/ss4_2.jpg"}
      %img.span4{:src => "images/works/786/ss4_2.jpg"}
    %a{:href => "images/works/786/ss5_5.jpg"}
      %img.span4{:src => "images/works/786/ss5_5.jpg"}

  %hr

  %h3 Procedural Valleys and Game Development -- Basic terrain generator
  %p
    One of the projects for my procedural content class was to procedurally generate a terrain heightmap, add a valley and then allow a player to navigate through this. Obstacles and decorations were placed procedurally to give a more enjoyable game play experience.
  %p
    Notes:
    %ul
      %li Terrain is generated on load using modulated perlin noise.
      %li Texture blending is used to provide a change in texture based on height and slope.
      %li Obstacles are added at run time but sadly not all of them are textured.
      %li Player can move the camera along the path but no collision detection is implemented yet.
  %p
    Info and code can be found
    %a{:href => "https://github.com/twymer/valley-game"} here.
  .row.pics
    %a{:href => "images/works/788/valley_3.jpg"}
      %img.span4{:src => "images/works/788/valley_3.jpg"}
    %a{:href => "images/works/788/valley_1.jpg"}
      %img.span4{:src => "images/works/788/valley_1.jpg"}
    %a{:href => "images/works/788/valley_2.jpg"}
      %img.span4{:src => "images/works/788/valley_2.jpg"}

  %hr

  %h3 Procedural Valleys and Game Development -- Town map generator
  %p
    For another class project I attempted to quickly generate procedural towns for RPG or Rogue-like type games. The application is still very rough and could use many improvements.
  %p
    It is done in Processing so that the world can be shown as it is built. This greatly slows down the actual generation process but is interesting to watch and very helpful for debugging. The technique used is agent based, modeled after the technique discussed in
    %a{:href => "http://ccl.northwestern.edu/papers/ProceduralCityMod.pdf"} this paper
    by Thomas Lechner et al.
  %p
    More info, pictures and code can be found
    %a{:href => "https://github.com/twymer/town-gen"} here.
  .pics
    %a{:href => "images/works/788/town_gen.png"}
      %img.big{:src => "images/works/788/town_gen.png"}

  %hr

  %h3 Google AI Challenge
  %p
    I participated in the Fall 2011
    %a{:href => "http://aichallenge.org/"} AI Challenge
    ants game. While my bot was rather unsuccessful, I spent a good bit of time learning about how to optimize Python code trying to keep up with the much more efficient C/C++ bots. Because of this, I think the code I used for searching is more interesting than the actual bot code and it can be found 
    %a{:href => "https://github.com/twymer/search-playground"} here.
  .pics
    %a{:href => "images/works/ai/ants.png"}
      %img.big{:src => "images/works/ai/ants.png"}

  %hr

  %h3 Ray Tracing &mdash; CSE 681
  %p
    The coolest class I took as an undergrad was a ray tracing class. We had one quarter to implement a ray tracer from the ground up in C++ adding new features to our growing project every week. The images below are rendered using only code written by me during the quarter.
  %p
    Features implemented:
    %ul
      %li Diffuse and specular illumination with Phong smooth shading
      %li Spotlight, direct and directional light sources
      %li Simple procedural texturing
      %li Soft and hard shadows
      %li Anti-aliasing
      %li Depth of field
      %li Reflection and refraction
      %li Glossiness
  %p
    %a{:href => "https://github.com/twymer/ray-tracer"} View the code
  .row.pics
    %a{:href => "images/works/681/dofglossaa.jpg"}
      %img.span5{:src => "images/works/681/dofglossaa.jpg"}
    %a{:href => "images/works/681/aaOn2.jpg"}
      %img.span3{:src => "images/works/681/aaOn2.jpg"}
    %a{:href => "images/works/681/simpletranslucency.jpg"}
      %img.span3{:src => "images/works/681/simpletranslucency.jpg"}

  %hr

  %h3 Project Euler
  %p
    %a{:href => "https://github.com/twymer/project-euler"} View the code
  %p
    %a{:href => "http://projecteuler.net/"}
      %img{:src => "images/works/project-euler.png"}

  %hr

  %h3 Intro to 3D Image Generation &mdash; CSE 781
  %p
    The sequel to the standard OpenGL class that many undergrads take. Using OpenGL and GLSL to produce effects such as renderings of PLY models, shadows, bump mapping, and environment map reflections.
  .row
    %a{:href => "images/works/781/reflectiveglsl.jpg"}
      %img.span4{:src => "images/works/781/reflectiveglsl.jpg"}
    %a{:href => "images/works/781/bumpmapped.jpg"}
      %img.span4{:src => "images/works/781/bumpmapped.jpg"}
