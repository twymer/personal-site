.container.projects
  %h2 Project Highlights

  %h3 Procedural Valleys and Game
  %p
    Another project for my procedural content class was to procedurally generate a terrain heightmap, add a valley and then allow a player to navigate through this. Obstacles and decorations were placed procedurally to give a more enjoyable game play experience.
  %p
    Notes:
    %ul
      %li Terrain is generated on load using modulated perlin noise.
      %li Texture blending is used to provide a change in texture based on height and slope.
      %li Obstacles are added at run time but sadly not all of them are textured.
      %li Player can move the camera along the path but no collision detection is implemented yet.
  %p
    Info and code can be found
    %a{:href => "https://github.com/twymer/valley-game"} here.
  .row.pics
    %a{:href => "images/works/788/valley_3.jpg"}
      %img.span4{:src => "images/works/788/valley_3.jpg"}
    %a{:href => "images/works/788/valley_1.jpg"}
      %img.span4{:src => "images/works/788/valley_1.jpg"}
    %a{:href => "images/works/788/valley_2.jpg"}
      %img.span4{:src => "images/works/788/valley_2.jpg"}

  %h3 Town Map Generator
  %p
    For a class project I attempted to quickly generate procedural towns for RPG or Rogue-like type games. The application is still very rough and could use many improvements.
  %p
    It is done in Processing so that the world can be shown as it is built. This greatly slows down the actual generation process but is interesting to watch and very helpful for debugging. The technique used is agent based, modeled after the technique discussed in
    %a{:href => "http://ccl.northwestern.edu/papers/ProceduralCityMod.pdf"} this paper
    by Thomas Lechner et al.
  %p
    More info, pictures and code can be found
    %a{:href => "https://github.com/twymer/town-gen"} here.
  .pics
    %a{:href => "images/works/788/town_gen.png"}
      %img.big{:src => "images/works/788/town_gen.png"}

  %h3 Google AI Challenge
  %p
    I participated in the Fall 2011
    %a{:href => "http://aichallenge.org/"} AI Challenge
    ants game. While my bot was rather unsuccessful, I spent a good bit of time learning about how to optimize Python code trying to keep up with the much more efficient C/C++ bots. The code used for searching is 
    %a{:href => "https://github.com/twymer/search-playground"} here.

  %h3 Project Euler
  %p
    %a{:href => "https://github.com/twymer/project-euler"} View the code
  %p
    %a{:href => "http://projecteuler.net/"}
      %img{:src => "images/works/project-euler.png"}


  %h3 Ray Tracing &mdash; CSE 681
  %p
    The coolest class I took as an undergrad was the introduction to ray tracing class. Below are some sample images from the class.
  %p
    %a{:href => "https://github.com/twymer/ray-tracer"} View the code
  .row.pics
    %a{:href => "images/works/681/dofglossaa.jpg"}
      %img.span5{:src => "images/works/681/dofglossaa.jpg"}
    %a{:href => "images/works/681/aaOn2.jpg"}
      %img.span3{:src => "images/works/681/aaOn2.jpg"}
    %a{:href => "images/works/681/simpletranslucency.jpg"}
      %img.span3{:src => "images/works/681/simpletranslucency.jpg"}

  %h3 "Lost Marbles" &mdash; Advanced Game Development &mdash; CSE 786
  %p
    My senior project was a game developed in a group of five. Our game was a platformer/puzzler where the player takes the role of an adventurous marble attempting to find someones "lost marbles." Details of our project can be found at
    %a{:href => "http://www.lupusoru.com/lostmarbles.html"} this site.
  %p
    %a{:href => "http://github.com/razvanlupusoru/Lost-Marbles"} View the code
  %p
    %a{:href => "http://www.cse.ohio-state.edu/~crawfis/cse786/Installers/2010/LostMarblesFinalSetup.exe"} Game installer
  %p
    %a{:href => "http://oncampus.osu.edu/2010/06/ninjasmarbles-and-toast/"} Campus paper about the class
  .row.grid
    %a{:href => "images/works/786/ss4_1.jpg"}
      %img.span4{:src => "images/works/786/ss4_1.jpg"}
    %a{:href => "images/works/786/ss4_9.jpg"}
      %img.span4{:src => "images/works/786/ss4_9.jpg"}
    %a{:href => "images/works/786/ss5_1.jpg"}
      %img.span4{:src => "images/works/786/ss5_1.jpg"}
  .row.grid
    %a{:href => "images/works/786/ss4_6.jpg"}
      %img.span4{:src => "images/works/786/ss4_6.jpg"}
    %a{:href => "images/works/786/ss4_2.jpg"}
      %img.span4{:src => "images/works/786/ss4_2.jpg"}
    %a{:href => "images/works/786/ss5_5.jpg"}
      %img.span4{:src => "images/works/786/ss5_5.jpg"}

  %h3 Intro to 3D Image Generation &mdash; CSE 781
  %p
    The sequel to the standard OpenGL class that many undergrads take. Using OpenGL and GLSL to produce effects such as renderings of PLY models, shadows, bump mapping, and environment map reflections.
  .row
    %a{:href => "images/works/781/reflectiveglsl.jpg"}
      %img.span4{:src => "images/works/781/reflectiveglsl.jpg"}
    %a{:href => "images/works/781/bumpmapped.jpg"}
      %img.span4{:src => "images/works/781/bumpmapped.jpg"}
